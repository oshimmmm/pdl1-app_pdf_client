{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yasuh\\\\pdl1-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchApp = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [result, setResult] = useState('');\n  const handleSearch = async () => {\n    const response = await fetch('http://localhost:5000/api/search', {\n      method: 'POST',\n      //POSTリクエストを上の5000ポートの/api/searchというエンドポイントに送信\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query\n      }) //送信するデータ（query）はJSON形式にする\n    });\n    const data = await response.json(); //feachに対して帰ってきたresponseをdataに格納\n    setResult(data.relatedContent || '関連する情報が見つかりませんでした');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query //入力された内容をqueryとする\n      ,\n      onChange: e => setQuery(e.target.value) //onChangeイベントでリアルタイムにsetQuery関数を呼び出してqueryに保存する。（ユーザーの入力内容がReactの状態として保持される）\n      ,\n      placeholder: \"\\u5358\\u8A9E\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"\\u691C\\u7D22\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchApp, \"LLBjloPXRP+tcdCrrtFh4B4rd9g=\");\n_c = SearchApp;\nexport default SearchApp;\nvar _c;\n$RefreshReg$(_c, \"SearchApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchApp","_s","query","setQuery","result","setResult","handleSearch","response","fetch","method","headers","body","JSON","stringify","data","json","relatedContent","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yasuh/pdl1-app/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SearchApp = () => {\n  const [query, setQuery] = useState('');\n  const [result, setResult] = useState('');\n\n  const handleSearch = async () => {\n    const response = await fetch('http://localhost:5000/api/search', {\n      method: 'POST', //POSTリクエストを上の5000ポートの/api/searchというエンドポイントに送信\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ query }), //送信するデータ（query）はJSON形式にする\n    });\n    const data = await response.json(); //feachに対して帰ってきたresponseをdataに格納\n    setResult(data.relatedContent || '関連する情報が見つかりませんでした');\n  };\n\n  return (\n    <div>\n      <input \n        type=\"text\" \n        value={query}  //入力された内容をqueryとする\n        onChange={(e) => setQuery(e.target.value)}  //onChangeイベントでリアルタイムにsetQuery関数を呼び出してqueryに保存する。（ユーザーの入力内容がReactの状態として保持される）\n        placeholder=\"単語を入力してください\" \n      />\n      <button onClick={handleSearch}>検索</button>\n      <div>\n        <pre>{result}</pre>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchApp;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC/DC,MAAM,EAAE,MAAM;MAAE;MAChBC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX;MAAM,CAAC,CAAC,CAAE;IACnC,CAAC,CAAC;IACF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;IACpCV,SAAS,CAACS,IAAI,CAACE,cAAc,IAAI,mBAAmB,CAAC;EACvD,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjB,KAAM,CAAE;MAAA;MACfkB,QAAQ,EAAGC,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAE;MAAA;MAC5CI,WAAW,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF5B,OAAA;MAAQ6B,OAAO,EAAEtB,YAAa;MAAAW,QAAA,EAAC;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1C5B,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAAkB,QAAA,EAAMb;MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5BID,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}